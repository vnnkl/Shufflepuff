package com.shuffle.bitcoin.blockchain;

import org.bitcoinj.core.Context;
import org.bitcoinj.core.NetworkParameters;
import org.bitcoinj.core.Transaction;
import org.bitcoinj.params.TestNet3Params;
import org.bitcoinj.store.BlockStoreException;
import org.junit.Assert;
import org.junit.Test;

import java.io.IOException;
import java.net.MalformedURLException;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;

import javax.xml.bind.annotation.adapters.HexBinaryAdapter;

/**
 * Created by Eugene Siegel on 7/26/16.
 */

public class TestBtcdTestnet {

    NetworkParameters netParams = TestNet3Params.get();
    Btcd testCase;
    HexBinaryAdapter adapter = new HexBinaryAdapter();
    Context context = Context.getOrCreate(netParams);

    String txid = "29cea902730132c58372bfa8ba3bbfbebbc01c5691ff1ace6334342307ce8888";
    String hexTx = "0100000023fabf8a25dbeeda289de3cc4d04154d46c01e5780a156efff0d65c86ee5c57b9a000000004847304402200c23be4e49c7803c4ec8066c0ca954cc340ed8e4d6a21bc9fc711638c5d66f83022008e4b8826b694f45b9dbc34bf7355a0d56178ab5169b6585870dee8312e609a901ffffffffa367076b56f14c725e84630475b87b2f0fdbd79344dfd95a569abe144c777b990000000049483045022055542f8586c3a91552d64d437007f2c03ada9d5bed7d7a5cc752d48784a1cfb6022100e8717a079f5c9100b74eeee89888478b2b42af1db12e43aef23b2a30235589c701ffffffff8926327c945a9d95bb4b1b6bbfdde5c40b32c62adf645738af951f702ea3247e000000004948304502202f2fc08efc4894abae20516191734c6afbc699ae2d917ea220d4edaa7cfce6b6022100fe1ab2004899acb29b7000216df6b0d96bf4387768c491821796dc7bbcccf5ee01ffffffff71a8913a538deac99f02d8faff3fe0cbe9976d15b207a4ae196bb0efd92d06de000000004847304402203e90e7e8aa7a29fe6d907cdf283c5d1b53cb373fd1cc38fa0a5120f2996382e20220248e8d3f7a906d9989fc5c8cff3e249de87743f6fbfd87a623e73eb9b069d35301fffffffff3a27c7de219edf56636562d7d715e4ea1fba260b734c4777358a0d302a773fb000000004a493046022100fdb5a70e1cdc549da6601d526551993527ca412eed41680e47d6a1de10bfdfb1022100bbd5371454645cbb482bfda2f2930506ef05920558c0a605a31cd1763b608b1301ffffffffa4fd5a77f2d1c34aa9ee709f46d4ced574aaf19e53970fa15e50937cd16cdb310000000049483045022100f5501bd3d79c00e44c0ae0d498fe0caf156c03d67bff44282b57f8df0ae7caa00220267c241abc0ac50ca8f58898e6bd12d025cb037dd4ea1391a374d02b2cc852fd01ffffffffbc113de32b80188488e3da80f25382947c5526ef6dec6133cedf5eea8587ecda000000004a493046022100926c3465dc4a54c6fc4d91a598feed04aa03071a7c2ca5ea263a6546c4af406702210086e3eaa97cf1e4ec9ea6a831b98040273fa15cfb711c12b61eba3c8a2bb3358001fffffffff25ec44582d7aebce9d023311950c581d4f879f98120467a8dea42c509df26460000000048473044022046d26062db4b0c8807d477bc04717de2844863cf65f73b5af8535cbac7d263ce022022e3fb29977e1f324271b24c642f4b2f4876de01dfc9638b6df4c35b01ff378a01ffffffff83297a06aa81b47b37f3fe6f44a739608259cfc8afd054fbd02f5377803fd70000000000494830450221009f6fc0522d0a899ec96afd84eedb693373f390d448a9ef86385edb559109f2b90220333428b23c8e3d34840490db3bcc067e639b09a925a20b272d2d73ed90fa4b1601ffffffffef02fc165c206be91a011a36f85d260da84007e12616b988d846f993746cc87d000000004a493046022100e8d8aa29bce09071e23c663de463a22c240a981167d6592cff30474143be0edc022100983f5dd4ad609997cdfdad3eb1d849848d9dc23f1fea9fa0dbeee2e70d6e773b01ffffffff3035225d317e648bc415d3ac326ae4f5d931929b9714a9f11a2319d29c49107a0000000049483045022100ffaeb794d7783b48ed4971f3a10ea27d066903dc62504bbe09e0ae586978119b02206e3514be05857aabab955e331ae09f4b55b20fb2b6bf721f445a40fc95f3dba101ffffffff9c9aa47815881717fffcfafc440fb9300f714bfc7ed98c67e813038aec2a42ac00000000494830450221009c7b201c7557aeb57c4763409900c81fe3fd7dfa44b3cc1dcae19accb836e5f802203ac68ec4ef0f91d6a57d5d2074e9acaea03746b8aa58a603c6cae92db537a09c01ffffffffc9d250187598dda56fcd5cdf48c32906615513388df7413c0b11709249ab1f8b0000000049483045022100d8be8c96460ae01385366c6ad8d66fa6fd80c6db7e251e2f9c94e4f1a2e6654e0220081ec70f5a40c71a21bc9688129832b448261f7cbc42b02ab27daf98b09089ad01ffffffff6d327a613b28b0b41cdd7f4e22b295fabd6c00844ad72448906775801ec00a1100000000484730440220756fa091e100ae17f40eb6f699db07b2fec4714f2e9c2f65b7c7550ed1de3fea02200b59add7a882ab800aaf325516d6586d09ea78011945f571046017c71965cd1001ffffffffc7597d83a99c76249fadbaa5b2b92aab71b5b758ca32ebd6f4f820b1a26cfabd0000000049483045022100c6bb60549d89a43acf1fdcf18dee95ce664f660dbea8feec782127c982e225ac022045916e7d2d1856f3807e14f3e9d15888cfe529ac71099481be5730fdee794f9001ffffffff923dd8bea641be9bb243d1f9a0872e8e8ddc40c7391d2469de6ec9c6c8e93550000000004a493046022100fe3f5a12d42e2a5ecaff634265f7b5765572289afc69f814cfda774f0458520b022100cb284a59b043cc4a08819aac07315e69d78e0bf665f9fc5a9401cea56b15331601ffffffff4a779de86285e89e95e5005262f74acabc5833ee361b44e9848bcd84be0f88c3000000004a49304602210098cae60ebcc744738ca342ddf34d5d509f9e78af53089e99acf690c1b611338b022100cb740332df3f095c108570ba42838065c8c8296321aa9a78059f9ed15b42e15e01ffffffff9c8ae509530ecd1f024f47c2cf49147d15d6ee33aeb3eff4ed845c75b83b60ce000000004a493046022100f0eeaeda200cd2831f3f66c0a3deef43120deb731d979bdc3300b266f15a040f022100e191e162745d7b4cd08418acacf3b849df689bd1a02d8a1dbd634abab73aeee101ffffffffbc105cb41edf87d6921b3389bf34caff4f5a94ef87cf9ace8d938d7605dbfc510000000049483045022100f493c165c92f548d61227a37d7e2447a00e0aaeb5169d21b16b0c525492a65cc0220789431d51e55975de8e46a083644f78250e87fb915397c88ff1fd4fbce89981d01ffffffff5b2973976aef122fc2d21165b99c385d4fd6a15b189113ca2a7533d9f1769608000000004a493046022100cc3d31273b8c68ca9a6e3f631f16826a297437b93d39f18ac9d0ac68cf110f7f022100abba52b8ddbb061860a935380fbcf72a7046b249dfe8dd6b9f9cac5e8b45125201ffffffffb0669ea7aaca7c6f50c6853964fba85228ac2712b0d71470ad5dd8fd7a1c4c12000000004948304502207945f7b77243643a3d16a18713f9532ab7dad6cf2bb87471d918eb756fe0303d022100a4d1499930af8b88c6517d74cc69b90e28fe24523ca2e24b13f21cf29483a86301ffffffff7b66cc553cc64169823a2f222cc199368e148e79ef74683676ab5eb4a8c87e9f0000000049483045022100981d3b3587a3006f67547afa73be1f2d66ac081959c845bdb3858ad4cfba171a022039a2b5a62dfe393026e045e05477175ca7660b248cbc90b6bda8264bad0ed32501ffffffff3dbfe673b87781cb31202dce181ff2a2f6f15a8307d4500ca0f3c5a72aaaa42e00000000494830450220183274b397c3716aeeddad6f403be5e3e48505a034b7cd59b095b4d0bd1fae78022100d9c203a2e490602787a68bb084b154e589ca9ab6e7d236346cddcf139c5166b201ffffffff0dcd8bb6a98a937aebeffe0234860fb0b1acf3dc2e976506df023bad8b4c0387000000004948304502205d8082a713d68b72b565cb8f91df80a65ebfc26724e15538633ed89c54f33825022100fb4a3a2ecaccb7c2036e33097459e5a1a5e7e86292f7d67e9ca48a01c998a2df01ffffffff22b057b2ce912b8c379aba936a1632840a86f08645fecc74cb78b04df05815490000000048473044022038ce2a72834d054d2e9faf489a0d4a789a7ade7e85cf4ad95a12c05bf9704a8702207598095795b8ae0a388126f36e6481840eebb43e0ef7c84787f36325f6d3feef01ffffffff9264bdb5bc68ab079db27cd7b0d56c7ce8cdcc4e8d8da3bf7ee6d5fbb1e0d713000000004948304502201a09f9bca66288d019e212c3d671241064d0c41f421c068bd7c9f10b5a82d869022100f95f695a1e5fb56d86428bda5a4f630c4661e97db449e3acdc1de863785442a501ffffffffd235073efd465198f9c02de6e3c5ff7e43cf528f4fb79aa5295f9e51090c8fba000000004a49304602210095c697e72df8a8212d9b156da463a5a894f7f68d4cee9f756ae5a4ee60b99a30022100e3dec2576164976aaedbccbdab6d6644d0d8d3c88af6978cc07b16db8ba159f801ffffffff10ed42a9664e04e3fb6212d058f986da493410cc3fbacdf072d5c517690943170000000048473044022033132c6a80355542a2f0fff823a9c0d4aebd8cc054fdc2e50525dcc2dca7c5dd02206f1652e38bce16d7abc7cd992d6b9c97400007a7a75f242cfb04f099d5d0b06701ffffffff6caec99abf591bed4ff2e00423ac93d2ce2b88fa7cf7224975c970dc7cef925d000000004847304402200fc76fd3dd6374c6432c616f141d9e79d9af9a67d754d5e5b59032d1796d040302203225136a1a35ca0c34db9f993a7877a06e1e70625c587ae881e99cfe558bd21e01ffffffff0a0566864675b97018bb782eb774c8ea0f2c6fd0842a828afb0ce16237418e0e0000000049483045022100956d208cd25ffefeda20128d18a01423098c6fddfebac90239c22bc568ce2ff902204d9dfff8eacb6949427530430db5b93ba4d1dfb27c4f0c73252593f5f2c1059901ffffffff29ddf6f87e10df56468818bc4f61dc3cd2c35c75e385db98627477202a8a79f600000000494830450220166671b2d8f82bc6ccebed01fba52bc79da384b2b48af045d0eed130eae62f3e022100ce04256da8e52f44c232c305944b2bb3f40ce5e42bc95ede32ed9457949c2a0601ffffffff118b3d8b34ec4fb6f6f6ea3fad6e1884d9392410a19fcedcb74ca06e21d643ef00000000494830450220191a09a8e319c2c194be8c2b300fa9dd307728252a3d9f4c05505c3d63a6f565022100b1ce4d0945c64c0db42c5d82080c31ff1cc777c3caf3b2e9d8c6a9919a7f4cee01ffffffff475108a489bc2ba55e3d71f40a7601d5786495448c949807d5292c77f16d52ca000000004a493046022100da7cc2d9b2cbb8c71899bc22afc5aa11819fbb0f0f033fdd1bcbe09d943c53ec022100f2a6f45b626876e0478a633692525bd112ade1407f682cdbc69d1b7d50c1ed1f01ffffffff44cf925a15788977a8732ad33a72ef90b7cd95857f37c99865ab1cb9db2fdff10000000049483045022100a29f7cb447b6fd3ff454ee7311261b2c9de3592a00d114ffcc1bb47448fe7214022003586a973c76cc11d150a27fac5fc196cfba92907bb389ecccbba00a268ae3e801ffffffffa21b3be8bb4d59165bd3aee752ec329575c1bf233b2b5d3fc9be8c22805f9e800000000048473044022050d0c26d056afc683ca3b4b4ad340cf9d4c46e8a85568fedc42c14b60a546dd102202c3d584097b2c252047c3bd63525643e3bc3a15b91b5d74a8cfd26b64a2e028301ffffffff02389e1b04000000001976a914d05841669ee2fe49db5c11e3f02e4f3479d0959788ac0016d0be280000001976a91402c1fe2d1bb0e8fbcc62310920b1bcad07b0692488ac00000000";
    byte[] bytearray = adapter.unmarshal(hexTx);
    Transaction tx = new Transaction(netParams, bytearray);

    String txid2 = "51fcdb05768d938dce9acf87ef945a4fffca34bf89331b92d687df1eb45c10bc";
    String hexTx2 = "01000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0d037a6a020103062f503253482fffffffff0100f2052a010000002321030b2bd8966e1587024c326fe053f57ac6c2b4aff6972861749efd96c9353ece70ac00000000";
    byte[] bytearray2 = adapter.unmarshal(hexTx2);
    Transaction tx2 = new Transaction(netParams, bytearray2);

    String testAddress = "n32RBESDDMwADmnB7H9jefXRSA6gfRXZEK";
    List<Transaction> txList = new LinkedList<>(Arrays.asList(tx, tx2));

    public TestBtcdTestnet() throws MalformedURLException {
        testCase = new Btcd(netParams, 2, "admin", "admin");
    }

    @Test
    public void testGetTransaction() throws IOException {
        Assert.assertEquals(testCase.getTransaction(txid), tx);
    }

    public void testGetWalletTransactions() throws IOException, BlockStoreException {
        List<Bitcoin.Transaction> listOfTx = testCase.getAddressTransactions(testAddress);
        Transaction testTx = listOfTx.get(0).bitcoinj();
        Transaction testTx2 = listOfTx.get(1).bitcoinj();
        List<Transaction> testTxList = new LinkedList<>(Arrays.asList(testTx, testTx2));
        Assert.assertEquals(txList, testTxList);
    }

}
